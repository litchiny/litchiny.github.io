<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>科学上网相关指南</title>
      <link href="/2018/12/16/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E7%9B%B8%E5%85%B3%E6%8C%87%E5%8D%97/"/>
      <url>/2018/12/16/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E7%9B%B8%E5%85%B3%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="科学上网相关指南"><a href="#科学上网相关指南" class="headerlink" title="科学上网相关指南"></a>科学上网相关指南</h1><h2 id="1-搬瓦工相关问题"><a href="#1-搬瓦工相关问题" class="headerlink" title="1. 搬瓦工相关问题"></a>1. 搬瓦工相关问题</h2><p><a href="https://www.bandwagonhost.net/3252.html" target="_blank" rel="noopener">搬瓦工换IP</a></p><p><a href="https://www.bandwagonhost.net/1330.html" target="_blank" rel="noopener">搬瓦工 VPS 由于“high CPU usage”被暂停的原因和解决方法</a></p><p><a href="https://www.bandwagonhost.net/527.html" target="_blank" rel="noopener">搬瓦工 VPS 使用政策详解之 CPU 限制</a></p><h2 id="2-使用V2Ray科学上网"><a href="#2-使用V2Ray科学上网" class="headerlink" title="2. 使用V2Ray科学上网"></a>2. 使用V2Ray科学上网</h2><p><a href="https://233yes.com/post/2/" target="_blank" rel="noopener">V2Ray 一键搭建和优化详细图文教程</a></p><p><a href="https://233yes.com/post/1/" target="_blank" rel="noopener">最好用的 V2Ray 一键安装脚本 &amp; 管理脚本</a></p><p><a href="https://233yes.com/post/8/" target="_blank" rel="noopener">V2RayN 使用教程</a></p><p><a href="https://233yes.com/post/5/" target="_blank" rel="noopener">使用 V2Ray 的 WebSocket 传输协议 + Cloudflare 拯救被墙的 IP</a></p><p><a href="https://233yes.com/post/10/" target="_blank" rel="noopener">V2Ray 一键安装脚本疑问集合</a></p><p><a href="https://www.aihoom.com/1342.html" target="_blank" rel="noopener">#教程#如何使用V2ray</a></p><h2 id="3-SS相关"><a href="#3-SS相关" class="headerlink" title="3. SS相关"></a>3. SS相关</h2><p><a href="https://www.v2ex.com/amp/t/407546" target="_blank" rel="noopener">不同版本的上网速度差异</a></p>]]></content>
      
      
      <categories>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> V2Ray </tag>
            
            <tag> bandwagon </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>建站 问题和解决(持续更新...)</title>
      <link href="/2018/12/09/%E5%BB%BA%E7%AB%99%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2018/12/09/%E5%BB%BA%E7%AB%99%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="服务器-bandwagon-环境-Centos6-x64-LNMP"><a href="#服务器-bandwagon-环境-Centos6-x64-LNMP" class="headerlink" title="服务器: bandwagon       环境: Centos6 x64     LNMP"></a>服务器: bandwagon       环境: Centos6 x64     LNMP</h2><h3 id="Q1-Let’s-Encrypt-Certbot-客户端无法申请https证书"><a href="#Q1-Let’s-Encrypt-Certbot-客户端无法申请https证书" class="headerlink" title="Q1: Let’s Encrypt Certbot 客户端无法申请https证书"></a>Q1: Let’s Encrypt Certbot 客户端无法申请https证书</h3><p>C1:  Licence支持的python需要在2.7及其以上,而bandwagon的是python2.6</p><p>S1:<a href="https://www.banwagongzw.com/46.html" target="_blank" rel="noopener">CentOS6 x64 编译安装 Python3 和 Python2.6 共存</a></p><p>O1:<a href="https://www.hi-linux.com/posts/6968.html" target="_blank" rel="noopener">Let&#39;s Encrypt 免费通配符 SSL 证书申请教程</a></p><p><a href="https://certbot.eff.org/" target="_blank" rel="noopener">Certbot官网</a></p><p>E1: </p><p><a href="https://lnmp.org/faq/lnmp-vhost-add-howto.html" target="_blank" rel="noopener">LNMP添加、删除虚拟主机及伪静态使用教程</a></p><p><a href="http://blog.51cto.com/frankch/1747866" target="_blank" rel="noopener">LAMP 和 LNMP 下服务的几种启动方式</a></p>]]></content>
      
      
      <categories>
          
          <category> Centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Certbot </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Android API适配</title>
      <link href="/2018/09/10/Android%20API%E9%80%82%E9%85%8D/"/>
      <url>/2018/09/10/Android%20API%E9%80%82%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<p>Android API适配</p><h3 id="1-Camera"><a href="#1-Camera" class="headerlink" title="1. Camera"></a>1. Camera</h3><ol><li>使用Camera2的时候, 清单配置文件需要增加允许手机开启硬件加速考虑到现有国内厂家对Camera2的支持度一般,不建议在实际开发项目中使用此API,略坑</li></ol><h3 id="2-Design"><a href="#2-Design" class="headerlink" title="2. Design"></a>2. Design</h3>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API适配 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Android机型Bug</title>
      <link href="/2018/07/30/Android%E6%9C%BA%E5%9E%8Bbug/"/>
      <url>/2018/07/30/Android%E6%9C%BA%E5%9E%8Bbug/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Samsung"><a href="#1-Samsung" class="headerlink" title="1. Samsung"></a>1. Samsung</h3><h4 id="Q1-拍照后会照片自动旋转"><a href="#Q1-拍照后会照片自动旋转" class="headerlink" title="Q1: 拍照后会照片自动旋转"></a>Q1: 拍照后会照片自动旋转</h4><p> Phone: Samsung SM-N9008S Android 5.0</p><p>S1: <a href="http://www.voidcn.com/article/p-apfpsnmq-bek.html" target="_blank" rel="noopener">三星拍照旋转问题</a></p><h3 id="2-OPPO"><a href="#2-OPPO" class="headerlink" title="2. OPPO"></a>2. OPPO</h3><h4 id="Q1-startForeground通知栏不显示"><a href="#Q1-startForeground通知栏不显示" class="headerlink" title="Q1: startForeground通知栏不显示"></a>Q1: startForeground通知栏不显示</h4><p>Phone: OPPO R9m Android5.1,OPPO R9s Android5.1</p><p>S1: OPPO手机对新apk默认的通知栏显示是关闭,参考解决: </p><pre><code>1. 先打开通知栏开关,再打开应用2. 将应用切换后台后,可以考虑监听,不过我觉得没有必要,后台杀死重新打开就好了</code></pre><h3 id="3-Allview"><a href="#3-Allview" class="headerlink" title="3. Allview"></a>3. Allview</h3><h4 id="Q1-在罗马尼亚语言下String转一位小数解析数据异常"><a href="#Q1-在罗马尼亚语言下String转一位小数解析数据异常" class="headerlink" title="Q1: 在罗马尼亚语言下String转一位小数解析数据异常"></a>Q1: 在罗马尼亚语言下String转一位小数解析数据异常</h4><p>Phone: Allview X5 Soul Pro</p><p>S1: DecimalFormat(“#.#”).format(num.toDouble())  设备会自动把”.”替换为”,” ,类似”0,4”,可使用其他转换方法</p><p>O1: 此问题不局限于此类型手机​    </p><h3 id="4-小米"><a href="#4-小米" class="headerlink" title="4. 小米"></a>4. 小米</h3><h4 id="Q1-自定义相机自拍模式下-画面上下颠倒"><a href="#Q1-自定义相机自拍模式下-画面上下颠倒" class="headerlink" title="Q1: 自定义相机自拍模式下,画面上下颠倒"></a>Q1: 自定义相机自拍模式下,画面上下颠倒</h4><p>Phone: 小米5s</p><p>S1: 小米在切换前置镜头的时候,应该将相机设置为270度而不是90度,大多数手机在调用系统的Camera的原生API的时候,如果出现上下颠倒现象,请检查角度是否设置正确</p><h3 id="5-索尼手机"><a href="#5-索尼手机" class="headerlink" title="5. 索尼手机"></a>5. 索尼手机</h3><h4 id="Q1-Edittext设置超出显示长度范围的内容后不显示"><a href="#Q1-Edittext设置超出显示长度范围的内容后不显示" class="headerlink" title="Q1: Edittext设置超出显示长度范围的内容后不显示"></a>Q1: Edittext设置超出显示长度范围的内容后不显示</h4><p>Phone: </p><p>S1: 截取到最大显示长度之前的来显示</p><h3 id="6-华为荣耀"><a href="#6-华为荣耀" class="headerlink" title="6. 华为荣耀"></a>6. 华为荣耀</h3><h4 id="Q1-无前置摄像头"><a href="#Q1-无前置摄像头" class="headerlink" title="Q1: 无前置摄像头"></a>Q1: 无前置摄像头</h4><p>Phone: 荣耀7i</p><p>S1: 不显示可切换至前置摄像头的按钮</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机型适配 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Android8.0版本新特性</title>
      <link href="/2018/02/05/Android8.0%E7%89%88%E6%9C%AC%E6%96%B0%E7%89%B9%E6%80%A7/"/>
      <url>/2018/02/05/Android8.0%E7%89%88%E6%9C%AC%E6%96%B0%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="Android8-0"><a href="#Android8-0" class="headerlink" title="Android8.0"></a>Android8.0</h2><ol><li><h4 id="EditText新增自动记忆功能"><a href="#EditText新增自动记忆功能" class="headerlink" title="EditText新增自动记忆功能"></a>EditText新增自动记忆功能</h4><p>A1: 其他EditText的id需要与此类型的EditText的id不能一致,否则会默认弹出其他同一id的密码框内容填充</p></li></ol><h2 id="Android8-1"><a href="#Android8-1" class="headerlink" title="Android8.1"></a>Android8.1</h2><ol><li><h4 id="String-getBytes-“Unicode”-Google手机8-1系统"><a href="#String-getBytes-“Unicode”-Google手机8-1系统" class="headerlink" title="String.getBytes(“Unicode”)(Google手机8.1系统)"></a>String.getBytes(“Unicode”)(Google手机8.1系统)</h4><p>  在版本8.1之前，返回的byte[] 是低位在前，高位在后，8.1后直接变成了高位在前，低    位在后</p><p>  A1: 改成String.getBytes(“UnicodeLittleUnmarked”)</p><p>  注意：</p><p>   原来的getBytes(“Unicode”)默认前两个字节分别是-2，-1.</p><p>   而getBytes(“UnicodeLittleUnmarked”)去除了这两个字节。</p></li><li><h4 id="应用的通知栏正常使用需要在通知管理里找到应用-并打开channel-one"><a href="#应用的通知栏正常使用需要在通知管理里找到应用-并打开channel-one" class="headerlink" title="应用的通知栏正常使用需要在通知管理里找到应用,并打开channel one"></a>应用的通知栏正常使用需要在通知管理里找到应用,并打开channel one</h4></li></ol><h2 id="Android9-0"><a href="#Android9-0" class="headerlink" title="Android9.0"></a>Android9.0</h2><ol><li><h4 id="当应用使用了前台服务时-清单配置文件增加一条新权限"><a href="#当应用使用了前台服务时-清单配置文件增加一条新权限" class="headerlink" title="当应用使用了前台服务时, 清单配置文件增加一条新权限"></a>当应用使用了前台服务时, 清单配置文件增加一条新权限</h4><p>   uses-permission android:name=”android.permission.FOREGROUND_SERVICE”</p><p>   否则程序无法正常安装</p></li><li><h4 id="针对http请求-需要在清单配置文件里的application需要增加一条设置"><a href="#针对http请求-需要在清单配置文件里的application需要增加一条设置" class="headerlink" title="针对http请求,需要在清单配置文件里的application需要增加一条设置"></a>针对http请求,需要在清单配置文件里的application需要增加一条设置</h4><p>   android:usesCleartextTraffic=”true”</p><p>   否则抛出异常 java.net.UnknownServiceException: CLEARTEXT communication to  not permitted by network security policy</p><p>   原因是Google现在推荐使用https,所以http是不安全且未来将会被弃用的.</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API适配 </tag>
            
            <tag> Android8.0 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Sqlite数据库多表联合查询</title>
      <link href="/2017/02/28/Sqlite%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%9A%E8%A1%A8%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2/"/>
      <url>/2017/02/28/Sqlite%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%9A%E8%A1%A8%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>工作上用数据库存储文件还是很便利的，所以有时候发现一张表存储数据感觉数据结构不是很清晰的时候，就需要新加第二张表或者多张表来进行联合查询对象信，一般是用键将彼此联系起来，在表中，每个主键的值都是唯一的。这样做的目的是在不重复每个表中的所有数据的情况下，把表间的数据交叉捆绑在一起，下面，写一点简单的例子</strong></p><p></p><p>先说一下两张表各自要展现的内容有哪些</p><p></p><ul><li>第一张表是动物的种类信息，有猫、狗、鸟三种，表名：animal</li><li>第二张表是一种动物的具体种类，猫有波斯猫（persian）、 伯曼猫（birman）、布偶猫 （ragdoll）；狗有维兹拉犬（vizsla）、波利犬（puli）、蝴蝶犬（papillon）；鸟有杜鹃鸟（cuckoo）、布谷鸟（eagle ）、鹰（Egret），表名：classify。</li><li>两张表的联系是有相同的anim_id ，请留意，”anim_id” 列把上面的两个表联系了起来</li></ul><p></p><p>表结构类型如下:</p><strong>第一张表</strong><p></p><table><thead><tr><th style="text-align:left">animal_id</th><th>anim_name</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td>cat</td></tr><tr><td style="text-align:left">2</td><td>dog</td></tr><tr><td style="text-align:left">3</td><td>bird</td></tr></tbody></table><p><strong>第二张表</strong></p><table><thead><tr><th style="text-align:left">classify_id</th><th style="text-align:left">animal_id</th><th>detailed_name</th><th>age</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">1</td><td>persian</td><td>1</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">1</td><td>birman</td><td>2</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">1</td><td>ragdoll</td><td>5</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">2</td><td>vizsla</td><td>3</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">2</td><td>puli</td><td>8</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">2</td><td>papillon</td><td>1</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">3</td><td>cuckoo</td><td>4</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">3</td><td>eagle</td><td>2</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">3</td><td>papillon</td><td>3</td></tr></tbody></table><p></p><p></p><strong>下面查询种类为猫的都有哪些详细种类，这些猫的年龄有多大</strong><p></p><p>SQL语句:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT animal.anim_name, classify.detailed_name, classify.age</span><br><span class="line">FROM animal</span><br><span class="line">INNER JOIN classify</span><br><span class="line">ON animal.animal_id = 1 AND classify.animal_id = 1</span><br><span class="line">ORDER BY classify.classify_id</span><br></pre></td></tr></table></figure></p><p>然后得到的表结果如下：</p><table><thead><tr><th style="text-align:left">anim_name</th><th>detailed_name</th><th>age</th></tr></thead><tbody><tr><td style="text-align:left">cat</td><td>persian</td><td>1</td></tr><tr><td style="text-align:left">cat</td><td>birman</td><td>2</td></tr><tr><td style="text-align:left">cat</td><td>ragdoll</td><td>5</td></tr></tbody></table><p></p><p></p>这是查询一种种类下的具体的动物详细分类，大多时候用表联合查询是用来筛除一些脏数据信息的，现在我们将表2添加一些其他数据，比如山羊(goat)的信息，但是表1不变<p></p><p><strong>修改后的第二张表</strong></p><table><thead><tr><th style="text-align:left">classify_id</th><th style="text-align:left">animal_id</th><th>detailed_name</th><th>age</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">1</td><td>persian</td><td>1</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">1</td><td>birman</td><td>2</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">1</td><td>ragdoll</td><td>5</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">2</td><td>vizsla</td><td>3</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">2</td><td>puli</td><td>8</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">2</td><td>papillon</td><td>1</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">3</td><td>cuckoo</td><td>4</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">3</td><td>eagle</td><td>2</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">3</td><td>papillon</td><td>3</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">4</td><td>goat</td><td>1</td></tr></tbody></table><p></p><p></p>现在根据表1的主键来查询表2的信息，具体说来就是,都有什么动物种类，这些对应的动物种类下都有什么详细分类<p></p><p><strong>这个时候的sql语句</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT animal.anim_name, classify.detailed_name, classify.age</span><br><span class="line">FROM animal</span><br><span class="line">INNER JOIN classify</span><br><span class="line">ON animal.animal_id = classify.animal_id </span><br><span class="line">ORDER BY classify.classify_id</span><br></pre></td></tr></table></figure></p><p>然后得到的表结果如下：</p><table><thead><tr><th style="text-align:left">classify_id</th><th style="text-align:left">animal_id</th><th>detailed_name</th><th>age</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">1</td><td>persian</td><td>1</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">1</td><td>birman</td><td>2</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">1</td><td>ragdoll</td><td>5</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">2</td><td>vizsla</td><td>3</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">2</td><td>puli</td><td>8</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">2</td><td>papillon</td><td>1</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">3</td><td>cuckoo</td><td>4</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">3</td><td>eagle</td><td>2</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">3</td><td>papillon</td><td>3</td></tr></tbody></table><p></p><p></p><strong>其实也就是我们之前未进行修改的表2的数据，如果两个表共有的animal_id不进行指定的话，数据库就会自己去匹配两个表中相同的字段值，具体的情况要进行具体的分析，这里只给出了一种参考，具体的代码操作，还需要自己去写，也是比较简单的</strong><p></p><p>更多的多表查询请移步:<a href="http://www.w3school.com.cn/sql/index.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/sql/index.asp</a></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>以上是我的理解,有什么不对的,欢迎留言指正,谢谢</p>]]></content>
      
      
      <categories>
          
          <category> Sqlite </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> Sqlite </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
